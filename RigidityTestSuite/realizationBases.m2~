needsPackage "Matroids"
needsPackage "Graphs"

-- use the nbc bases the write down the realization bases
realisationBases = method()
realisationBases Matroid := M -> (
    nbcList := nbcBases M;
    E := groundSet M;
    for B in nbcList list (
        B' := E - B + set {0};
	if member(B', nbcList) then B else continue
	)
    )


-- given a graph G with vertices {0,1 .. n} and edges E
-- and a permutation {p_0, p_1 .. p_n}
-- produce the graph whose edges are {p_i, p_j} for each {i, j}
--
permuteGraphVertices = method()
permuteGraphVertices(Graph, List) := (G, p) -> (
    f := i -> p_i;
    newEdges := apply(edges G, e -> f \ e);
    graph(vertices G, newEdges)
    )


-- produce the matroid of a graph except we permute the order of the ground set by a permutation p
-- we DO NOT check that p is a permutation
-- this code is a modified version of the code in the matroids package
matroid(Graph, List) := Matroid => opts -> (G, p) -> (
	P := opts.ParallelEdges;
	L := opts.Loops/(v -> set{v});
	e := #edges G;
	E := hashTable apply(e, i -> (edges G)#i => p_i);
	C := getCycles G/(c -> set apply(#c-1, i -> E#(set{c#i, c#(i+1)})));
	for i from 0 to #P - 1 do (
		C = C | select(C, c -> member(E#(P#i), c))/(c -> c - set{E#(P#i)} + set{e+i}) | {set{E#(P#i), e + i}};
	);
	M := matroid(sort(edges G, uv -> E#uv) | P | L, C | apply(#L, i -> set{e + #P + i}), EntryMode => "circuits");
	if #L == 0 and #P == 0 then M.cache.graph = G;
	I := id_(ZZ^(#G.vertexSet));
	A := incidenceMatrix G;
	if #P > 0 then A = A | matrix{apply(P/toList, p -> I_{p#0} + I_{p#1})};
	if #L > 0 then A = A | map(ZZ^(numrows A), ZZ^(#L), 0);
	setRepresentation(M, sub(A, ZZ/2))
	)

edgeList = method()
edgeList Graph := G -> toList \ edges G

end --

load "realizationBases.m2"

n = 6
maxInd = numberOfLamanGraphs n
graphList = for i from 0 to maxInd -1 list getLamanGraph(n, i);

for i from 0 to maxInd -1 do (
    G := graphList_i;
    print G;
    print("Edges : " | toString (toList \ edges G));
    r := getRealizations(n, i);
    print("Realisations : " | r);
    print "";
    e := #edges G;
    for p in permutations(e) do (
	M := matroid(G, p);
	basesList := realisationBases M;
	--print(p, #basesList, toList \ M.cache.groundSet, toList \ basesList);
	if #basesList == r then (
	    print(p, #basesList, toList \ M.cache.groundSet, toList \ basesList);
	    break -- produce one example for each graph
	    );
	);
    print "---------------------";
    )


--------------------------------
-- K_33
n = 6
i = 2
maxInd = numberOfLamanGraphs n
graphList = for i from 0 to maxInd -1 list getLamanGraph(n, i);
G := graphList_i;
print G;
print("Edges : " | toString (toList \ edges G));
r := getRealizations(n, i);
print("Realisations : " | r);
print "";
e := #edges G;
maxCount := 0;
for p in permutations(e) do (
    M := matroid(G, p);
    basesList := realisationBases M;
    if #basesList > maxCount then (
	print(p, #basesList, toList \ M.cache.groundSet, toList \ basesList);
	maxCount = #basesList;
	);
    );
print "---------------------";

-*
({0, 1, 2, 3, 4, 5, 6, 7, 8}, 8, {{0, 3}, {4, 0}, {0, 5}, {1, 3}, {4, 1}, {5, 1}, {2, 3}, {4, 2}, {5, 2}}, {{8, 0, 3, 4, 7}, {8, 0, 3, 4, 6}, {8, 0, 1, 4, 5}, {8, 0, 1, 2, 4}, {0, 3, 5, 6, 7}, {0, 2, 3, 6, 7}, {0, 1, 2, 5, 7}, {0, 1, 2, 5, 6}})
({0, 1, 2, 3, 5, 4, 6, 7, 8}, 10, {{0, 3}, {4, 0}, {0, 5}, {1, 3}, {5, 1}, {4, 1}, {2, 3}, {4, 2}, {5, 2}}, {{8, 0, 3, 4, 7}, {8, 0, 1, 4, 7}, {8, 0, 3, 5, 6}, {8, 0, 1, 4, 5}, {8, 0, 1, 2, 5}, {0, 3, 4, 6, 7}, {0, 2, 3, 6, 7}, {0, 1, 2, 4, 7}, {0, 2, 3, 5, 6}, {0, 1, 2, 5, 6}})
({0, 1, 2, 3, 5, 6, 7, 8, 4}, 12, {{0, 3}, {4, 0}, {0, 5}, {1, 3}, {5, 2}, {4, 1}, {5, 1}, {2, 3}, {4, 2}}, {{8, 0, 3, 6, 7}, {8, 0, 2, 3, 7}, {8, 0, 3, 4, 6}, {8, 0, 1, 4, 6}, {8, 0, 1, 2, 6}, {8, 0, 3, 4, 5}, {0, 1, 2, 6, 7}, {0, 3, 4, 5, 7}, {0, 2, 3, 5, 7}, {0, 1, 2, 5, 7}, {0, 1, 4, 5, 6}, {0, 1, 2, 4, 5}})
({0, 1, 2, 4, 5, 6, 7, 8, 3}, 14, {{0, 3}, {4, 0}, {0, 5}, {5, 2}, {1, 3}, {4, 1}, {5, 1}, {2, 3}, {4, 2}}, {{8, 0, 2, 4, 7}, {8, 0, 3, 4, 6}, {8, 0, 1, 3, 6}, {8, 0, 1, 2, 6}, {8, 0, 3, 4, 5}, {8, 0, 2, 4, 5}, {8, 0, 1, 2, 4}, {0, 3, 5, 6, 7}, {0, 1, 3, 6, 7}, {0, 1, 2, 6, 7}, {0, 3, 4, 5, 7}, {0, 2, 4, 5, 7}, {0, 1, 2, 5, 7}, {0, 1, 3, 5, 6}})
*-

---------------------------
-- 3 prism
n = 6
i = 3
maxInd = numberOfLamanGraphs n
graphList = for i from 0 to maxInd -1 list getLamanGraph(n, i);
G := graphList_i;
print G;
print("Edges : " | toString (toList \ edges G));
r := getRealizations(n, i);
print("Realisations : " | r);
print "";
e := #edges G;
maxCount := 0;
for p in permutations(e) do (
    M := matroid(G, p);
    basesList := realisationBases M;
    if #basesList > maxCount then (
	print(p, #basesList, toList \ M.cache.groundSet, toList \ basesList);
	maxCount = #basesList;
	);
    );

------------------------
-*
({0, 1, 2, 3, 4, 5, 6, 7, 8}, 12, {{0, 3}, {4, 0}, {0, 5}, {1, 2}, {4, 1}, {5, 1}, {2, 3}, {5, 2}, {4, 3}}, {{8, 0, 3, 4, 7}, {8, 0, 2, 4, 7}, {8, 0, 2, 3, 7}, {8, 0, 3, 5, 6}, {8, 0, 2, 5, 6}, {8, 0, 2, 3, 5}, {0, 1, 4, 6, 7}, {0, 1, 3, 4, 7}, {0, 1, 2, 4, 7}, {0, 1, 4, 5, 6}, {0, 1, 3, 5, 6}, {0, 1, 2, 5, 6}})
({0, 1, 2, 4, 3, 5, 6, 7, 8}, 14, {{0, 3}, {4, 0}, {0, 5}, {4, 1}, {1, 2}, {5, 1}, {2, 3}, {5, 2}, {4, 3}}, {{8, 0, 3, 6, 7}, {8, 0, 3, 4, 7}, {8, 0, 2, 4, 7}, {8, 0, 2, 3, 7}, {8, 0, 3, 5, 6}, {8, 0, 2, 5, 6}, {8, 0, 2, 4, 5}, {0, 1, 3, 6, 7}, {0, 1, 3, 4, 7}, {0, 1, 2, 4, 7}, {0, 1, 4, 5, 6}, {0, 1, 3, 5, 6}, {0, 1, 2, 5, 6}, {0, 1, 2, 4, 5}})
({0, 1, 2, 4, 5, 6, 7, 8, 3}, 16, {{0, 3}, {4, 0}, {0, 5}, {4, 3}, {1, 2}, {4, 1}, {5, 1}, {2, 3}, {5, 2}}, {{8, 0, 3, 5, 7}, {8, 0, 1, 5, 7}, {8, 0, 3, 4, 5}, {8, 0, 1, 4, 5}, {8, 0, 2, 3, 5}, {8, 0, 1, 2, 5}, {8, 0, 2, 3, 4}, {8, 0, 1, 2, 4}, {0, 3, 5, 6, 7}, {0, 1, 5, 6, 7}, {0, 3, 4, 6, 7}, {0, 1, 4, 6, 7}, {0, 2, 3, 6, 7}, {0, 1, 2, 6, 7}, {0, 2, 3, 4, 6}, {0, 1, 2, 4, 6}})
*-
-----------------------


-*
-- examples for 6 degree graphs of good labellings
Graph{0 => {4, 5}      }
      1 => {4, 5}
      2 => {3, 4, 5}
      3 => {2, 4, 5}
      4 => {0, 1, 2, 3}
      5 => {0, 1, 2, 3}
Edges : {{4, 0}, {0, 5}, {4, 1}, {5, 1}, {2, 3}, {4, 2}, {5, 2}, {4, 3}, {5, 3}}
Realisations : 16

({2, 3, 4, 5, 6, 0, 7, 1, 8}, 16, {{4, 2}, {4, 3}, {4, 0}, {0, 5}, {4, 1}, {5, 1}, {2, 3}, {5, 2}, {5, 3}}, {{8, 0, 3, 5, 6}, {8, 0, 2, 5, 6}, {8, 0, 3, 4, 6}, {8, 0, 2, 4, 6}, {8, 0, 1, 3, 5}, {8, 0, 1, 2, 5}, {8, 0, 1, 3, 4}, {8, 0, 1, 2, 4}, {0, 3, 5, 6, 7}, {0, 2, 5, 6, 7}, {0, 3, 4, 6, 7}, {0, 2, 4, 6, 7}, {0, 1, 3, 5, 7}, {0, 1, 2, 5, 7}, {0, 1, 3, 4, 7}, {0, 1, 2, 4, 7}})
---------------------
Graph{0 => {4, 5}      }
      1 => {2, 3, 4}
      2 => {1, 3, 5}
      3 => {1, 2, 5}
      4 => {0, 1, 5}
      5 => {0, 2, 3, 4}
Edges : {{4, 0}, {0, 5}, {1, 2}, {1, 3}, {4, 1}, {2, 3}, {5, 2}, {5, 3}, {4, 5}}
Realisations : 16

({3, 4, 0, 1, 5, 6, 7, 8, 2}, 16, {{1, 2}, {1, 3}, {4, 5}, {4, 0}, {0, 5}, {4, 1}, {2, 3}, {5, 2}, {5, 3}}, {{8, 0, 4, 5, 6}, {8, 0, 3, 5, 6}, {8, 0, 2, 4, 6}, {8, 0, 2, 3, 6}, {8, 0, 1, 4, 5}, {8, 0, 1, 3, 5}, {8, 0, 1, 2, 4}, {8, 0, 1, 2, 3}, {0, 4, 5, 6, 7}, {0, 3, 5, 6, 7}, {0, 2, 4, 6, 7}, {0, 2, 3, 6, 7}, {0, 1, 4, 5, 7}, {0, 1, 3, 5, 7}, {0, 1, 2, 4, 7}, {0, 1, 2, 3, 7}})
---------------------
Graph{0 => {3, 4, 5}}
      1 => {3, 4, 5}
      2 => {3, 4, 5}
      3 => {0, 1, 2}
      4 => {0, 1, 2}
      5 => {0, 1, 2}
Edges : {{0, 3}, {4, 0}, {0, 5}, {1, 3}, {4, 1}, {5, 1}, {2, 3}, {4, 2}, {5, 2}}
Realisations : 16

---------------------
Graph{0 => {3, 4, 5}}
      1 => {2, 4, 5}
      2 => {1, 3, 5}
      3 => {0, 2, 4}
      4 => {0, 1, 3}
      5 => {0, 1, 2}
Edges : {{0, 3}, {4, 0}, {0, 5}, {1, 2}, {4, 1}, {5, 1}, {2, 3}, {5, 2}, {4, 3}}
Realisations : 24

---------------------
Graph{0 => {4, 5}      }
      1 => {2, 3, 5}
      2 => {1, 4, 5}
      3 => {1, 4, 5}
      4 => {0, 2, 3}
      5 => {0, 1, 2, 3}
Edges : {{4, 0}, {0, 5}, {1, 2}, {1, 3}, {5, 1}, {4, 2}, {5, 2}, {4, 3}, {5, 3}}
Realisations : 16

({3, 4, 0, 6, 5, 7, 1, 2, 8}, 16, {{1, 2}, {5, 2}, {4, 3}, {4, 0}, {0, 5}, {5, 1}, {1, 3}, {4, 2}, {5, 3}}, {{8, 0, 4, 5, 7}, {8, 0, 3, 5, 7}, {8, 0, 1, 4, 7}, {8, 0, 1, 3, 7}, {8, 0, 2, 4, 5}, {8, 0, 2, 3, 5}, {8, 0, 1, 2, 4}, {8, 0, 1, 2, 3}, {0, 4, 5, 6, 7}, {0, 3, 5, 6, 7}, {0, 1, 4, 6, 7}, {0, 1, 3, 6, 7}, {0, 2, 4, 5, 6}, {0, 2, 3, 5, 6}, {0, 1, 2, 4, 6}, {0, 1, 2, 3, 6}})
---------------------
Graph{0 => {2, 4}      }
      1 => {4, 5}
      2 => {0, 3, 5}
      3 => {2, 4, 5}
      4 => {0, 1, 3, 5}
      5 => {1, 2, 3, 4}
Edges : {{0, 2}, {4, 0}, {4, 1}, {5, 1}, {2, 3}, {5, 2}, {4, 3}, {5, 3}, {4, 5}}
Realisations : 16

({2, 3, 4, 5, 7, 8, 0, 6, 1}, 16, {{4, 3}, {4, 5}, {0, 2}, {4, 0}, {4, 1}, {5, 1}, {5, 3}, {2, 3}, {5, 2}}, {{8, 0, 3, 5, 6}, {8, 0, 2, 5, 6}, {8, 0, 3, 4, 6}, {8, 0, 2, 4, 6}, {8, 0, 1, 3, 5}, {8, 0, 1, 2, 5}, {8, 0, 1, 3, 4}, {8, 0, 1, 2, 4}, {0, 3, 5, 6, 7}, {0, 2, 5, 6, 7}, {0, 3, 4, 6, 7}, {0, 2, 4, 6, 7}, {0, 1, 3, 5, 7}, {0, 1, 2, 5, 7}, {0, 1, 3, 4, 7}, {0, 1, 2, 4, 7}})
---------------------
Graph{0 => {3, 4}      }
      1 => {2, 4, 5}
      2 => {1, 3, 5}
      3 => {0, 2, 5}
      4 => {0, 1, 5}
      5 => {1, 2, 3, 4}
Edges : {{0, 3}, {4, 0}, {1, 2}, {4, 1}, {5, 1}, {2, 3}, {5, 2}, {5, 3}, {4, 5}}
Realisations : 16

({2, 3, 5, 0, 4, 7, 6, 8, 1}, 16, {{4, 1}, {4, 5}, {0, 3}, {4, 0}, {5, 1}, {1, 2}, {5, 2}, {2, 3}, {5, 3}}, {{8, 0, 3, 4, 6}, {8, 0, 2, 4, 6}, {8, 0, 1, 3, 6}, {8, 0, 1, 2, 6}, {8, 0, 3, 4, 5}, {8, 0, 2, 4, 5}, {8, 0, 1, 3, 5}, {8, 0, 1, 2, 5}, {0, 3, 4, 6, 7}, {0, 2, 4, 6, 7}, {0, 1, 3, 6, 7}, {0, 1, 2, 6, 7}, {0, 3, 4, 5, 7}, {0, 2, 4, 5, 7}, {0, 1, 3, 5, 7}, {0, 1, 2, 5, 7}})
---------------------
Graph{0 => {3, 5}      }
      1 => {2, 4}
      2 => {1, 4, 5}
      3 => {0, 4, 5}
      4 => {1, 2, 3, 5}
      5 => {0, 2, 3, 4}
Edges : {{0, 3}, {0, 5}, {1, 2}, {4, 1}, {4, 2}, {5, 2}, {4, 3}, {5, 3}, {4, 5}}
Realisations : 16

({0, 1, 5, 6, 4, 7, 8, 2, 3}, 16, {{0, 3}, {0, 5}, {5, 3}, {4, 5}, {4, 2}, {1, 2}, {4, 1}, {5, 2}, {4, 3}}, {{8, 0, 2, 6, 7}, {8, 0, 1, 6, 7}, {8, 0, 2, 5, 7}, {8, 0, 1, 5, 7}, {8, 0, 2, 4, 6}, {8, 0, 1, 4, 6}, {8, 0, 2, 4, 5}, {8, 0, 1, 4, 5}, {0, 2, 3, 6, 7}, {0, 1, 3, 6, 7}, {0, 2, 3, 5, 7}, {0, 1, 3, 5, 7}, {0, 2, 3, 4, 6}, {0, 1, 3, 4, 6}, {0, 2, 3, 4, 5}, {0, 1, 3, 4, 5}})
---------------------
Graph{0 => {4, 5}      }
      1 => {3, 5}
      2 => {3, 4}
      3 => {1, 2, 4, 5}
      4 => {0, 2, 3, 5}
      5 => {0, 1, 3, 4}
Edges : {{4, 0}, {0, 5}, {1, 3}, {5, 1}, {2, 3}, {4, 2}, {4, 3}, {5, 3}, {4, 5}}
Realisations : 16

({0, 1, 4, 5, 7, 8, 6, 3, 2}, 16, {{4, 0}, {0, 5}, {4, 5}, {5, 3}, {1, 3}, {5, 1}, {4, 3}, {2, 3}, {4, 2}}, {{8, 0, 2, 5, 6}, {8, 0, 1, 5, 6}, {8, 0, 2, 4, 6}, {8, 0, 1, 4, 6}, {8, 0, 2, 3, 5}, {8, 0, 1, 3, 5}, {8, 0, 2, 3, 4}, {8, 0, 1, 3, 4}, {0, 2, 5, 6, 7}, {0, 1, 5, 6, 7}, {0, 2, 4, 6, 7}, {0, 1, 4, 6, 7}, {0, 2, 3, 5, 7}, {0, 1, 3, 5, 7}, {0, 2, 3, 4, 7}, {0, 1, 3, 4, 7}})
---------------------
Graph{0 => {2, 3}      }
      1 => {4, 5}
      2 => {0, 4, 5}
      3 => {0, 4, 5}
      4 => {1, 2, 3, 5}
      5 => {1, 2, 3, 4}
Edges : {{0, 2}, {0, 3}, {4, 1}, {5, 1}, {4, 2}, {5, 2}, {4, 3}, {5, 3}, {4, 5}}
Realisations : 16

({2, 3, 5, 6, 0, 1, 7, 8, 4}, 16, {{4, 2}, {5, 2}, {0, 2}, {0, 3}, {4, 5}, {4, 1}, {5, 1}, {4, 3}, {5, 3}}, {{8, 0, 3, 4, 6}, {8, 0, 2, 4, 6}, {8, 0, 1, 3, 6}, {8, 0, 1, 2, 6}, {8, 0, 3, 4, 5}, {8, 0, 2, 4, 5}, {8, 0, 1, 3, 5}, {8, 0, 1, 2, 5}, {0, 3, 4, 6, 7}, {0, 2, 4, 6, 7}, {0, 1, 3, 6, 7}, {0, 1, 2, 6, 7}, {0, 3, 4, 5, 7}, {0, 2, 4, 5, 7}, {0, 1, 3, 5, 7}, {0, 1, 2, 5, 7}})
---------------------
Graph{0 => {4, 5}         }
      1 => {3, 5}
      2 => {3, 4, 5}
      3 => {1, 2, 5}
      4 => {0, 2, 5}
      5 => {0, 1, 2, 3, 4}
Edges : {{4, 0}, {0, 5}, {1, 3}, {5, 1}, {2, 3}, {4, 2}, {5, 2}, {5, 3}, {4, 5}}
Realisations : 16

({0, 1, 5, 6, 7, 8, 3, 4, 2}, 16, {{4, 0}, {0, 5}, {4, 5}, {5, 2}, {5, 3}, {1, 3}, {5, 1}, {2, 3}, {4, 2}}, {{8, 0, 2, 6, 7}, {8, 0, 1, 6, 7}, {8, 0, 2, 5, 7}, {8, 0, 1, 5, 7}, {8, 0, 2, 4, 6}, {8, 0, 1, 4, 6}, {8, 0, 2, 4, 5}, {8, 0, 1, 4, 5}, {0, 2, 3, 6, 7}, {0, 1, 3, 6, 7}, {0, 2, 3, 5, 7}, {0, 1, 3, 5, 7}, {0, 2, 3, 4, 6}, {0, 1, 3, 4, 6}, {0, 2, 3, 4, 5}, {0, 1, 3, 4, 5}})
---------------------
Graph{0 => {4, 5}         }
      1 => {4, 5}
      2 => {3, 5}
      3 => {2, 4, 5}
      4 => {0, 1, 3, 5}
      5 => {0, 1, 2, 3, 4}
Edges : {{4, 0}, {0, 5}, {4, 1}, {5, 1}, {2, 3}, {5, 2}, {4, 3}, {5, 3}, {4, 5}}
Realisations : 16

({0, 1, 3, 4, 6, 7, 8, 5, 2}, 16, {{4, 0}, {0, 5}, {4, 5}, {4, 1}, {5, 1}, {5, 3}, {2, 3}, {5, 2}, {4, 3}}, {{8, 0, 2, 4, 7}, {8, 0, 1, 4, 7}, {8, 0, 2, 3, 7}, {8, 0, 1, 3, 7}, {8, 0, 2, 4, 6}, {8, 0, 1, 4, 6}, {8, 0, 2, 3, 6}, {8, 0, 1, 3, 6}, {0, 2, 4, 5, 7}, {0, 1, 4, 5, 7}, {0, 2, 3, 5, 7}, {0, 1, 3, 5, 7}, {0, 2, 4, 5, 6}, {0, 1, 4, 5, 6}, {0, 2, 3, 5, 6}, {0, 1, 3, 5, 6}})
---------------------
Graph{0 => {4, 5}         }
      1 => {4, 5}
      2 => {4, 5}
      3 => {4, 5}
      4 => {0, 1, 2, 3, 5}
      5 => {0, 1, 2, 3, 4}
Edges : {{4, 0}, {0, 5}, {4, 1}, {5, 1}, {4, 2}, {5, 2}, {4, 3}, {5, 3}, {4, 5}}
Realisations : 16

({0, 1, 3, 4, 5, 6, 7, 8, 2}, 16, {{4, 0}, {0, 5}, {4, 5}, {4, 1}, {5, 1}, {4, 2}, {5, 2}, {4, 3}, {5, 3}}, {{8, 0, 2, 4, 6}, {8, 0, 1, 4, 6}, {8, 0, 2, 3, 6}, {8, 0, 1, 3, 6}, {8, 0, 2, 4, 5}, {8, 0, 1, 4, 5}, {8, 0, 2, 3, 5}, {8, 0, 1, 3, 5}, {0, 2, 4, 6, 7}, {0, 1, 4, 6, 7}, {0, 2, 3, 6, 7}, {0, 1, 3, 6, 7}, {0, 2, 4, 5, 7}, {0, 1, 4, 5, 7}, {0, 2, 3, 5, 7}, {0, 1, 3, 5, 7}})
---------------------
*-
